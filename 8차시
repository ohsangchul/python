[ 실습 내용 : 13_for.py ]
### range([초기치], 최종치, [증가치]) : "시작위치 ~ 끝위치-1" 까지 증가치 만큼 증가하는 숫자를 포함한 객체를 만들어 준다.
### 초기치(default:0)와 증가치(default:0)는 생략 가능하다.

### for 변수 in range()
###    반복할 구문
###    ...

a = range(10) # range(0, 10, 1)과 같은 표현이다.
print(a)
print(type(a))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#range(0, 10)
#<class 'range'>

# 지정된 범위의 숫자 출력하기
for i in range(10):
     print(i, end = ' ')
print()
for i in range(0, 10):
     print(i, end = ' ')
print()
for i in range(0, 10, 2):
     print(i, end = ' ')
print()
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#0 1 2 3 4 5 6 7 8 9 
#0 1 2 3 4 5 6 7 8 9 
#0 2 4 6 8 

# 1~100 합계 구하기
total = 0
for num in range(1, 101, 1):
     total += num
     #print('[{}]{}'.format(num, total))     
print('합계 : %d' % total)
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#합계 : 5050


# 주사위를 10번 굴렸을때 나오는 눈의 개수를 출력하는 프로그램
import random as r

dice = [0, 0, 0, 0, 0, 0]
# case1. 특정 개수의 리스트를 동일한 값으로 초기화 하는 경우
# dice = [0 for count in range(6)]
# case2. 반복 횟수만큼 특정 값을 리스트에 추가
# dice = []
# for i in range(6):
#      dice.append(0)

for count in range(10):
     dice_num = r.randrange(6) # randrange(start, end) : "시작위치 ~ 끝위치-1" 사이의 값을 랜덤하게 출력한다. 시작위치(default:0)는 생략 가능하다.
     dice[dice_num] += 1
     #print(dice_num+1, end =' ')
     print('%d' % (dice_num+1), end =' ')
     
print()

total = 0
for index in range(len(dice)):
     print('[{}]:{}'.format(index+1, dice[index]))
     total += dice[index] * (index+1)

print('나온 주사위 눈의 합계 : {}'.format(total))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
# 2 2 5 1 2 4 4 1 6 1
#[1]:3
#[2]:3
#[3]:0
#[4]:2
#[5]:1
#[6]:1
#나온 주사위 눈의 합계 : 28

### for 변수 in (list, tuple, dictionary, set)
###    반복할 구문
###    ...
### 자료형의 0번째 값을 변수에 저장하고 구문을 시작한다.
### 수행이 끝나면 다음 값을 변수에 저장하고 반복한다.
### 마지막 값을 변수에 넣고 구문을 실행한후 반복을 종료한다.

# list 이용한 for문
score = [55, 77, 88, 66, 99]
count = 0
for ok in score:
     count += 1
     if ok >= 80:
          print('list : {}번 {}점 합격 입니다.'.format(count, ok))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#list : 3번 88점 합격 입니다.
#list : 5번 99점 합격 입니다.

# tuple 이용한 for문
score = (55, 77, 88, 66, 99)
count = 0
for ok in score:
     count += 1
     if ok >= 80:
          print('tuple : {}번 {}점 합격 입니다.'.format(count, ok))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#tuple : 3번 88점 합격 입니다.
#tuple : 5번 99점 합격 입니다.

# set 이용한 for문 (순서가 없기 때문에 어떤 값이 먼저 출력될지 알 수 없다.)
score = {55, 77, 88, 66, 99}
count = 0
for ok in score:
     count += 1
     if ok >= 80:
          print('set : {}번 {}점 합격 입니다.'.format(count, ok))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#set : 2번 99점 합격 입니다.
#set : 5번 88점 합격 입니다

# dictionary 이용한 for문
menu = {'커피':100, '우유':150, '생수':50, '케익':100, '세트':200}
print(menu.keys())
print(menu.values())
print(menu.items())
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#dict_keys(['커피', '우유', '생수', '케익', '세트'])
#dict_values([100, 150, 50, 100, 200])
#dict_items([('커피', 100), ('우유', 150), ('생수', 50), ('케익', 100), ('세트', 200)])

for order in menu: # 딕셔너리명만 적으면 key 값을 출력한다. 딕셔너리명.keys()와 같다
     print('menu => {}:{}'.format(order, menu[order]))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#menu => 커피:100
#menu => 우유:150
#menu => 생수:50
#menu => 케익:100
#menu => 세트:200

total = 0
for order in menu.values():
    total += order
print('value => 합계 금액 : {}'.format(total))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#value => 합계 금액 : 600

for order in menu.items():
    print('items() => {}:{}'.format(order[0], order[1]))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#items() => 커피:100
#items() => 우유:150
#items() => 생수:50
#items() => 케익:100
#items() => 세트:200

for (key, value) in menu.items():
    print('items(key, value) => {}:{}'.format(key, value))
#==================== RESTART: D:/osc/workspace/13_for.py ====================
#items(key, value) => 커피:100
#items(key, value) => 우유:150
#items(key, value) => 생수:50
#items(key, value) => 케익:100
#items(key, value) => 세트:200

''' 
# 2부터 1000 사이의 완전수를 출력하고 개수를 구하라
# 완전수 : 약수 중 자기 자신을 제외한 약수를 모두 더하면 자기 자신이 되는 자연수
# 약수 : 나누었을때 나머지가 0이 되는 수
count = 0
print('완전수 : ', end='')

for naturalNum in range(2,1000):
    total = 0
    for divisor in range(1, naturalNum):        
        if naturalNum % divisor == 0 and naturalNum // divisor != naturalNum:
            total += divisor
    if naturalNum == total+1:
        print('{}'.format(naturalNum), end=' ')
        count += 1

print()
print('완전수 개수 : %d' % count)
'''
